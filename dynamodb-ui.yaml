AWSTemplateFormatVersion: 2010-09-09
Resources:


    DynamoDbUiRole:
        Type: AWS::IAM::Role
        Properties:
          AssumeRolePolicyDocument:
            Version: 2012-10-17
            Statement:
            - Effect: Allow
              Principal:
                Service:
                - lambda.amazonaws.com
              Action:
              - sts:AssumeRole

          Path: "/"
          Policies:
          - PolicyName: root
            PolicyDocument:
              Version: 2012-10-17
              Statement:
              - Effect: Allow
                Action:
                - logs:*
                Resource: arn:aws:logs:*:*:*
              - Effect: Allow
                Action:
                - 'dynamodb:*'
                Resource: !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/*'

    # step2, create a function even if bucket dont exist
    DynamodbUiCallProxyFunction:
        Type: AWS::Lambda::Function
        DependsOn: [ DynamoDbUiRole ]
        Properties:
            FunctionName: DynamodbUiCallProxyFunction
            MemorySize: 128
            Handler: index.handler
            Role: !GetAtt DynamoDbUiRole.Arn
            Runtime: nodejs6.10
            Timeout: 10
            #Environment:
            #    Variables:
            #        deploy_bucket: !Sub "${OrgName}-deploy-bucket"
            Code:
                ZipFile: >
                    var AWS = require('aws-sdk');
                    exports.handler = function(event, context) {
                        context.done()
                    };
