AWSTemplateFormatVersion: 2010-09-09
Resources:


    DynamoDbUiRole:
        Type: AWS::IAM::Role
        Properties:
          AssumeRolePolicyDocument:
            Version: 2012-10-17
            Statement:
            - Effect: Allow
              Principal:
                Service:
                - lambda.amazonaws.com
              Action:
              - sts:AssumeRole

          Path: "/"
          Policies:
          - PolicyName: root
            PolicyDocument:
              Version: 2012-10-17
              Statement:
              - Effect: Allow
                Action:
                - logs:*
                Resource: arn:aws:logs:*:*:*
              - Effect: Allow
                Action:
                - 'dynamodb:*'
                Resource: !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/*'


    DynamodbUiCallProxyFunction:
        Type: AWS::Lambda::Function
        DependsOn: [ DynamoDbUiRole ]
        Properties:
            FunctionName: DynamodbUiCallProxyFunction
            MemorySize: 128
            Handler: index.handler
            Role: !GetAtt DynamoDbUiRole.Arn
            Runtime: nodejs6.10
            Timeout: 10
            #Environment:
            #    Variables:
            #        deploy_bucket: !Sub "${OrgName}-deploy-bucket"
            Code:
                ZipFile: >
                    var AWS = require('aws-sdk');
                    exports.handler = function(event, context) {
                        context.done()
                    };

    APIPermissionToRunLambda:
        Type: AWS::Lambda::Permission
        Properties:
          Action: lambda:InvokeFunction
          FunctionName: !Ref DynamodbUiCallProxyFunction
          Principal: apigateway.amazonaws.com



    Deployment5:
        Type: AWS::ApiGateway::Deployment
        Properties:
          RestApiId: !Ref API
          StageName: dummy
    v1:
        Type: AWS::ApiGateway::Stage
        Properties:
          StageName: v1
          Description: v1 Stage
          RestApiId: !Ref API
          DeploymentId: !Ref Deployment5



    API:
      Type: AWS::ApiGateway::RestApi
      Properties:
        Description: DynamoDB UI
        Name: "dynamodbui"
        FailOnWarnings: true
        Body: !Sub
          - |
            swagger: "2.0"
            info:
              version: "2017-01-11T12:08:03Z"
              title: "api"
            basePath: "/v1"
            schemes:
            - "https"
            paths:
              /:
                    get:
                      consumes:
                      - "application/json"
                      produces:
                      - "text/html"
                      responses:
                        200:
                          description: "200 response"
                          headers:
                            Content-Type:
                              type: "string"
                      x-amazon-apigateway-integration:
                        responses:
                          default:
                            statusCode: "200"
                            responseParameters:
                              method.response.header.Content-Type: "'text/html'"
                            responseTemplates:
                              text/html:
                                    |
                                    <!DOCTYPE html>
                                    <html>
                                    <head>
                                    	<title>DynamoDB UI</title>
                                    	<script src="https://cdnjs.cloudflare.com/ajax/libs/ractive/1.0.0-build-107/ractive.min.js"></script>

                                    	<script src="https://cdn.rawgit.com/databank/ractive-window/master/dist/ractive-window.min.js"></script>

                                    	<!--<script src="https://cdnjs.cloudflare.com/ajax/libs/ractive/0.8.14/ractive-legacy.js"></script>-->
                                    	<script src="https://sdk.amazonaws.com/js/aws-sdk-2.160.0.min.js"></script>

                                    	<script src="https://www.promisejs.org/polyfills/promise-6.1.0.js"></script>
                                    	<script src="https://cdnjs.cloudflare.com/ajax/libs/async/2.6.0/async.js"></script>
                                    	<script src="https://rawgit.com/awspilot/dynamodb-ui/master/js/awspilot-dynamodb-sql.js"></script>

                                    	<script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.4/lodash.min.js"></script>

                                    	<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.2.9/ace.js"></script>
                                    	<script src="https://cdn.rawgit.com/awspilot/dynamodb-ui/e55522a4/js/ace/mode_sql.js"></script>
                                    	<script src="https://cdn.rawgit.com/awspilot/dynamodb-ui/a3dd6e58/js/ace/custom.js"></script>
                                    	<script src="https://cdn.rawgit.com/awspilot/dynamodb-ui/a3dd6e58/js/ractive/ractive-ace.js"></script>
                                    	<script src="https://cdn.rawgit.com/awspilot/dynamodb-ui/4a4bef30/js/ractive/ractive-scrollarea.js"></script>



                                    	<script src="https://rawgit.com/awspilot/dynamodb-ui/master/js/session.js"></script>
                                    	<script src="https://rawgit.com/awspilot/dynamodb-ui/master/js/gui.js"></script>
                                    	<script src="https://rawgit.com/awspilot/dynamodb-ui/master/js/tablelist.js"></script>
                                    	<script src="https://rawgit.com/awspilot/dynamodb-ui/master/js/tableview.js"></script>
                                    	<script src="https://rawgit.com/awspilot/dynamodb-ui/master/js/tabs.js"></script>
                                    	<script src="https://rawgit.com/awspilot/dynamodb-ui/master/js/ui.js"></script>
                                    	<script src="https://rawgit.com/awspilot/dynamodb-ui/master/js/login.js"></script>


                                    	<link rel="stylesheet" href="https://rawgit.com/awspilot/dynamodb-ui/master/css/style.css"/>
                                    	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/material-design-iconic-font/2.2.0/css/material-design-iconic-font.css"/>

                                    </head>
                                    <body>

                                    </body>
                                    </html>
                        passthroughBehavior: "when_no_match"
                        requestTemplates:
                          application/json: "{\"statusCode\": 200}"
                        type: "mock"
                    options:
                      consumes:
                      - "application/json"
                      produces:
                      - "application/json"
                      responses:
                        200:
                          description: "200 response"
                          schema:
                            $ref: "#/definitions/Empty"
                          headers:
                            Access-Control-Allow-Origin:
                              type: "string"
                            Access-Control-Allow-Methods:
                              type: "string"
                            Access-Control-Allow-Headers:
                              type: "string"
                      x-amazon-apigateway-integration:
                        responses:
                          default:
                            statusCode: "200"
                            responseParameters:
                              method.response.header.Access-Control-Allow-Methods: "'GET,POST,OPTIONS'"
                              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
                              method.response.header.Access-Control-Allow-Origin: "'*'"
                        requestTemplates:
                          application/json: "{\"statusCode\": 200}"
                        passthroughBehavior: "when_no_match"
                        type: "mock"

            definitions:
              Empty:
                type: "object"
            x-amazon-apigateway-binary-media-types:
            - "image/png"
            - "image/webp"
            - "image/*"
          - {
              lambdaapi: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:DynamodbUiCallProxyFunction/invocations'
            }
#
